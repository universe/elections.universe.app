{"version":3,"sources":["images/universe.svg","Map/Map.tsx","Panel/constants.tsx","common/Checkbox/index.tsx","Panel/SocialSubmitForm.tsx","Panel/Panel.tsx","App.tsx","types.ts","serviceWorker.js","index.js"],"names":["module","exports","MAP_CENTER","lat","lng","heatMapColorforValue","value","disabledPcts","Set","Map","cache","state","map","window","initMap","this","bind","script","document","createElement","async","defer","src","head","appendChild","google","maps","getElementById","center","zoom","disableDefaultUI","clickableIcons","data","loadGeoJson","setStyle","fillColor","strokeOpacity","strokeWeight","documentElement","navigator","maxTouchPoints","msMaxTouchPoints","addListener","event","props","setPrecinctStats","mapType","HEAT","selectedCandidates","precinctMeta","contestData","pct","feature","getProperty","has","size","precinct","values","min","Math","max","clickable","setState","update","JSON","stringify","filter","Boolean","clear","add","isNaN","id","Component","MAP_TYPE","copy","ASSEMBLY_DISTRICTS","name","SUPERVISOR_DISTRICTS","NAME_MAP","dem","rep","npp","ai","pf","lib","grn","misc","Checkbox","className","xmlns","version","style","position","top","left","width","height","in","stdDeviation","result","mode","in2","disabled","type","checked","onChange","children","viewBox","fill","d","SocialSubmitForm","showSocialBar","useState","submitted","setSubmitted","formClassNames","htmlFor","href","onSubmit","evt","preventDefault","form","target","Object","fromEntries","FormData","entries","headers","Headers","append","fetch","action","method","body","placeholder","ToggleButton","stateSetter","classNames","includes","onClick","x","handleMultiSelect","coolDown","Panel","contests","neighborhoods","setMapType","assemblyDistricts","setAssemblyDistricts","supervisorDistricts","setSupervisorDistricts","selectedNeighborhoods","setSelectedNeighborhoods","selectedContest","setSelectedContest","candidateTotals","setSelectedCandidates","precinctStats","registration","totalVotes","setFilterType","filterType","activeRunoff","setActiveRunoff","numRunoffs","numSeats","setShowSocialBar","activeTab","setActiveTab","scrollTo","num","el","scrollWidth","behavior","handleFilterTypeChange","handleMapTypeChange","handleCandidateSelection","candidate","indexOf","pop","selectedCandidatesWithoutCandidate","selectedCandidate","candidates","keys","sort","a","b","roundTotals","TOTAL","e","currentTarget","contest","idx","key","index","labelClass","length","isEligibleForFilter","Array","_","arr","undefined","onScroll","setTimeout","count","panelWidth","ratio","scrollLeft","pos","floor","active","ceil","c","i","percent","currentValue","toString","replace","toFixed","n","from","RACE_NAME","getSearchParam","regexp","exec","location","search","split","decodeURIComponent","numberWithCommas","App","setData","setPrecinctMeta","slice","isLoading","setIsLoading","doeNeighborhood","useEffect","random","json","parseInt","contestIdx","toUpperCase","ensureMapType","activePct","setActivePct","__META__","ranks","heat","partyRegistration","PCTSHEAT","candidateSet","turnout","0","pctName","pctPcts","totalPctVotes","all","totalPctReg","party","candidateName","push","qsCon","qsCan","getOwnPropertyNames","join","qsSup","qsAss","qsNei","params","url","pathname","history","replaceState","vals","winners","seats","console","log","logo","alt","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a0ab119c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/universe.4705ec55.svg\";","import React, { Component} from 'react';\n\ndeclare global {\n  interface Window { google: any; initMap: any; }\n}\n\nconst PRECINCTS_GEOJSON_URL = 'https://cdn.universe.app/geojson/usa/06/75/precincts_2012.geojson';\nconst MAP_CENTER = { lat: 37.7650, lng: -122.4000, };\nconst INITIAL_ZOOM = 13;\n\nfunction heatMapColorforValue(value: number) {\n  var h = value * 240\n  return \"hsl(\" + h + \", 100%, 50%)\";\n}\n\nfunction hasTouch(): boolean {\n  return 'ontouchstart' in document.documentElement\n         || navigator.maxTouchPoints > 0\n         || navigator.msMaxTouchPoints > 0;\n}\n\ninterface Props {\n  mapType: string,\n  values: any,\n  HEAT: any,\n  selectedCandidates: string[],\n  precinctMeta: any,\n  contestData: any,\n  setPrecinctStats: any,\n  precinct: any,\n}\n\ninterface State {\n  map: google.maps.Map | null,\n}\n\nconst disabledPcts = new Set();\n\nclass Map extends Component<Props, State> {\n  cache: null | string = null;\n  state = {\n    map: null,\n  }\n\n  componentDidMount() {\n    window.initMap = this.initMap.bind(this);\n\n    const script = document.createElement('script')\n    script.async = true\n    script.defer = true\n    script.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAq_fAHf_uUBs9gXCAseIZVZl2shvHwGD0&callback=initMap\"\n    document.head.appendChild(script)\n  }\n\n  initMap() {\n    const map: google.maps.Map = new window.google.maps.Map(document.getElementById('map'), {\n      center: MAP_CENTER,\n      zoom: INITIAL_ZOOM,\n      disableDefaultUI: true,\n      clickableIcons: false,\n    });\n    map.data.loadGeoJson(PRECINCTS_GEOJSON_URL);\n    map.data.setStyle({\n      fillColor: 'red',\n      strokeOpacity: 1,\n      strokeWeight: 2,\n    });\n\n    if (!hasTouch()) {\n      // @ts-ignore\n      map.data.addListener('mouseover', (event) => {\n        const { mapType, HEAT, selectedCandidates, precinctMeta, contestData, setPrecinctStats } = this.props;\n        const pct = event.feature.getProperty('prec_2012');\n        if (disabledPcts.has(pct) || !(HEAT[pct] && HEAT[pct][0])) { setPrecinctStats(null); return }\n        setPrecinctStats(pct);\n      });\n\n      // @ts-ignore\n      map.data.addListener('mouseout', (event) => {\n        const { setPrecinctStats } = this.props;\n        setPrecinctStats(null);\n      });\n    }\n    else {\n      map.data.addListener('click', (event) => {\n        const { mapType, HEAT, selectedCandidates, precinctMeta, contestData, setPrecinctStats } = this.props;\n        const pct = event.feature.getProperty('prec_2012');\n        if (disabledPcts.has(pct) || disabledPcts.size === 0) { setPrecinctStats(null); return; }\n        setPrecinctStats(this.props.precinct && pct === this.props.precinct ? null : pct);\n      });\n    }\n\n    const { mapType, values, HEAT } = this.props;\n    const min = Math.min(...values) || 0;\n    const max = Math.max(...values) || 1;\n\n    map.data.setStyle(function(feature: { getProperty: (arg0: string) => any; }) {\n      var pct = feature.getProperty('prec_2012');\n      if (mapType === 'TURNOUT') {\n        return {\n          fillColor: (HEAT[pct] && HEAT[pct][0]) ? heatMapColorforValue((HEAT[pct][0] - 0) / (1 - 0)) : 'black',\n          clickable: true,\n        };\n      }\n      if (mapType === 'WINLOSE') {\n        return {\n          fillColor: (HEAT[pct] && HEAT[pct][0]) ? heatMapColorforValue(HEAT[pct][3] ? 1 : 0) : 'black',\n          clickable: true,\n        };\n      }\n      return {\n        fillColor: (HEAT[pct] && HEAT[pct][0]) ? heatMapColorforValue((HEAT[pct][0] - min) / (max - min)) : 'black',\n        clickable: true,\n      };\n    });\n\n    this.setState({ map });\n  }\n\n  render() {\n    const { map } = this.state;\n    const { mapType, values, HEAT, precinct, selectedCandidates } = this.props;\n\n    // @ts-ignore\n    const update = JSON.stringify({ HEAT, mapType, selectedCandidates });\n    if (this.cache !== update) {\n      this.cache = update;\n      const min = Math.min(...values.filter(Boolean));\n      const max = Math.max(...values.filter(Boolean));\n      disabledPcts.clear();\n      map && (map as unknown as google.maps.Map).data.setStyle(function(feature: { getProperty: (arg0: string) => any; }) {\n        var pct = feature.getProperty('prec_2012');\n        (HEAT[pct] && HEAT[pct][0]) || disabledPcts.add(pct);\n        if (mapType === 'TURNOUT') {\n          return {\n            fillColor: (HEAT[pct] && HEAT[pct][0]) ? heatMapColorforValue((HEAT[pct][0] - 0) / (1 - 0)) : 'black',\n            clickable: true,\n          };\n        }\n        if (mapType === 'WINLOSE') {\n          return {\n            fillColor: (HEAT[pct] && HEAT[pct][0]) ? heatMapColorforValue(HEAT[pct][3] ? 1 : 0) : 'black',\n            clickable: true,\n          };\n        }\n\n        // If is hotspot, and we risk having a 0 as a denominator, just show blue (happens when one pct is selected).\n        if (mapType === 'HOTSPOT' && HEAT[pct] && HEAT[pct][0] && isNaN((HEAT[pct][0] - min) / (max - min))) {\n          return {\n            fillColor: (HEAT[pct] && HEAT[pct][0]) ? heatMapColorforValue(1) : 'black',\n            clickable: true,\n          };\n        }\n\n        return {\n          fillColor: (HEAT[pct] && HEAT[pct][0]) ? heatMapColorforValue((HEAT[pct][0] - min) / (max - min)) : 'black',\n          clickable: true,\n        };\n      });\n    }\n\n\n    return (\n      <div id=\"map\" />\n    );\n  }\n}\n\nexport default Map;\n","export const MAP_TYPE = [\n  // {\n  //   value: 'TURNOUT',\n  //   copy: 'Turnout',\n  //   id: 'map-type-turnout'\n  // },\n  {\n    value: 'WINLOSE',\n    copy: 'Win / Lose',\n    id: 'map-type-winlose'\n  },\n  {\n    value: 'SUPPORT',\n    copy: 'Support',\n    id: 'map-type-support'\n  },\n  {\n    value: 'HOTSPOT',\n    copy: 'Hotspot',\n    id: 'map-type-hotspot'\n  }\n]\n\nexport const isEligibleForFilter = (mapType: string) => mapType === 'SUPPORT' || mapType === 'WINLOSE'\nexport const FILTER_TYPE = [\n  {\n    value: 'INDIVIDUAL',\n    copy: 'Individual',\n    id: 'filter-type-individual'\n  },\n  {\n    value: 'HEADTOHEAD',\n    copy: 'Head to Head',\n    id: 'filter-type-head-to-head'\n  },\n]\nexport const ASSEMBLY_DISTRICTS = [\n  {\n    name: 'AD 17',\n    value: 'AD17'\n  },\n  {\n    name: 'AD 19',\n    value: 'AD19'\n  },\n];\n\nexport const SUPERVISOR_DISTRICTS = [\n  {\n    name: 'District 1',\n    value: 'SD1'\n  },\n  {\n    name: 'District 2',\n    value: 'SD2'\n  },\n  {\n    name: 'District 3',\n    value: 'SD3'\n  },\n  {\n    name: 'District 4',\n    value: 'SD4'\n  },\n  {\n    name: 'District 5',\n    value: 'SD5'\n  },\n  {\n    name: 'District 6',\n    value: 'SD6'\n  },\n  {\n    name: 'District 7',\n    value: 'SD7'\n  },\n  {\n    name: 'District 8',\n    value: 'SD8'\n  },\n  {\n    name: 'District 9',\n    value: 'SD9'\n  },\n  {\n    name: 'District 10',\n    value: 'SD10'\n  },\n  {\n    name: 'District 11',\n    value: 'SD11'\n  }\n];\n\nexport const NAME_MAP: { [key: string]: string | undefined } = {\n  dem: 'Democratic',\n  rep: 'Republican',\n  npp: 'No Party Preference',\n  ai: 'American Independent',\n  pf: 'Peace and Freedom',\n  lib: 'Libertarian',\n  grn: 'Green',\n  misc: 'Other',\n};\n","import './Checkbox.css';\nimport React from 'react';\n\nexport interface CheckboxProps {\n  checked: boolean;\n  onChange: (value: boolean) => void;\n  children?: JSX.Element | string | JSX.Element[] | string[];\n  disabled?: boolean;\n}\n\nexport default function Checkbox(props: CheckboxProps) {\n  return (\n    <div className=\"checkbox\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" style={{position: 'fixed', top: 0, left: 0, width: 0, height: 0}}>\n        <defs>\n          <filter id=\"goo\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"4\" result=\"blur\" />\n            <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 22 -7\" result=\"goo\" />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n      <input className={`checkbox__input ${props.disabled ? 'disabled' : ''}}`} type=\"checkbox\" checked={props.checked} onChange={() => {if(!props.disabled){ props.onChange(!props.checked)}}} />\n      <label className=\"checkbox__label\">{props.children}</label>\n      <svg className=\"checkbox__check\" width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\">\n        <path d=\"M2 8.36364L6.23077 12L13 2\" />\n      </svg>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './SocialSubmitForm.css';\n\nconst FB_SHARE_URL = 'https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Felections.universe.app%2F06%2F75%2F2020P';\nconst TWITTER_SHARE_URL = 'https://twitter.com/intent/tweet?hashtags=universeapp&related=universeapp&text=Local%20politics%20matter&url=https%3A%2F%2Felections.universe.app%2F06%2F75%2F2020P';\n\ntype Props = {\n  showSocialBar: boolean,\n}\n\nconst SocialSubmitForm = ({ showSocialBar }: Props) => {\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const form = evt.target as HTMLFormElement;\n    const data = Object.fromEntries(new FormData(form).entries());\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json')\n    window.fetch(form.action, {\n      method: form.method,\n      headers: headers,\n      body: JSON.stringify(data),\n    });\n    setSubmitted(true);\n  };\n\n  const formClassNames = 'email-form' + (submitted ? ' submitted' : '');\n  return (\n    <section id=\"social-bar\" className={`${showSocialBar ? 'open' : ''} social-bar`}>\n      <label className=\"map__filter-label map__social-label\" htmlFor=\"email-input\">\n        <span className=\"sectionTitle\">Stay up to date on local elections:</span>\n        <a href={FB_SHARE_URL} id=\"fb-share\" className=\"fb-btn\">Share</a>\n        <a href={TWITTER_SHARE_URL} id='twtr-share' className=\"twtr-btn\">Tweet</a>\n      </label>\n      <form onSubmit={handleSubmit}\n        className={formClassNames} id='email-form' target=\"_blank\" method=\"POST\" action=\"https://api.universe.app/v1/email/subscribe\">\n          <label className=\"email-form__success\">Thanks for subscribing!</label>\n          <input type='text' placeholder=\"First Name\" name=\"FNAME\" className=\"email-form__name-input\" />\n          <input type='text' placeholder=\"Last Name\" name=\"LNAME\" className=\"email-form__name-input\" />\n          <input type='email' placeholder=\"Email\" name=\"EMAIL\" id=\"email-input\" className=\"email-form__input\" />\n          <button type='submit' className='email-form__submit' form='email-form'> Submit</button>\n          <input type='hidden' name='u' value='6b56ce91de42db2930dd99758' />\n          <input type='hidden' name='id' value='74b5983973' />\n          <input type=\"hidden\" name=\"redirect\" value=\"https://elections.universe.app/06/75/2020P\" />\n          <input type=\"hidden\" name=\"TAGS\" value='06_75_2020P' />\n      </form>\n    </section>\n  )\n};\n\nexport default SocialSubmitForm;","import React, { Fragment, UIEvent, useState } from 'react';\nimport './Panel.css';\nimport { MAP_TYPE, ASSEMBLY_DISTRICTS, SUPERVISOR_DISTRICTS, NAME_MAP, FILTER_TYPE, isEligibleForFilter } from './constants'\nimport Checkbox from '../common/Checkbox'\nimport SocialSubmitForm from './SocialSubmitForm';\nimport { MapType } from '../types';\n\ntype PanelProps = {\n  contests: string[],\n  neighborhoods: Set<string>,\n  mapType: MapType,\n  // erica TODO: fix these types\n  setMapType: any,\n  assemblyDistricts: string[],\n  setAssemblyDistricts: any,\n  supervisorDistricts: string[],\n  setSupervisorDistricts: any,\n  selectedNeighborhoods: string[],\n  setSelectedNeighborhoods: any,\n  selectedContest: number,\n  setSelectedContest: any,\n  candidateTotals: any,\n  selectedCandidates: string[],\n  setSelectedCandidates: any,\n  registration: number,\n  totalVotes: number,\n  precinctStats: string,\n  filterType: string,\n  setFilterType: any,\n  numRunoffs: number;\n  activeRunoff: number;\n  setActiveRunoff: (n: number) => void;\n  numSeats: number;\n  children: JSX.Element | JSX.Element[];\n}\n\nfunction numberWithCommas(x: number) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst ToggleButton = ({ value, state, stateSetter, name }: any) => {\n  const handleMultiSelect = (value: any, state: Array<any>, setState: Function) => {\n    const updatedState = state.includes(value) ? state.filter((x: any) => x !== value) : [...state, value]\n    setState(updatedState)\n  }\n  const classNames = \"toggleButton\" + (state.includes(value) ? ' toggleButton__open' : '');\n  return (\n    <div className={classNames} onClick={() => handleMultiSelect(value, state, stateSetter)}>\n      {name as string}\n    </div>\n  )\n};\nlet coolDown: number | false = false;\n// erica: would love to figure out a cleaner way to pass all this stuff into the panel! d\nconst Panel = ({ contests, neighborhoods, mapType, setMapType,\n  assemblyDistricts, setAssemblyDistricts, supervisorDistricts, setSupervisorDistricts,\n  selectedNeighborhoods, setSelectedNeighborhoods, selectedContest, setSelectedContest, candidateTotals, selectedCandidates,\n  setSelectedCandidates, registration, totalVotes, precinctStats, setFilterType, filterType,\n  activeRunoff, setActiveRunoff, numRunoffs, numSeats, children }: PanelProps) => {\n  const [showSocialBar, setShowSocialBar] = useState(false);\n  const [activeTab, setActiveTab] = useState('candidates');\n\n  function onScroll(evt: UIEvent) {\n    const el = evt.target as HTMLElement;\n    if (coolDown) { return; }\n    coolDown = window.setTimeout(() => coolDown = false, 50);\n    const count = el.children.length;\n    const panelWidth = (el.scrollWidth / count);\n    const ratio = el.scrollLeft / panelWidth;\n    const pos = el.scrollLeft - (Math.floor(ratio) * panelWidth) < (panelWidth / 2);\n    const active = Math.max(0, Math.min(count - 1, pos ? Math.floor(ratio) : Math.ceil(ratio)));\n    setActiveTab(active ? 'turfs' : 'candidates');\n  }\n\n  function scrollTo(num: number) {\n    const el = document.getElementById('tab-panel')\n    if(!el) { return; }\n    el.scrollTo({ left: num * el.scrollWidth, behavior: 'smooth' });\n  }\n\n  const handleFilterTypeChange = (event: any) => {\n    const target = event.target\n    setFilterType(target.value)\n    setSelectedCandidates([]) //Clear candidate selection\n  }\n  const handleMapTypeChange = (event: any) => {\n    const target = event.target;\n    setMapType(target.value)\n    if (!showSocialBar) {\n      setShowSocialBar(!showSocialBar)\n    }\n  }\n\n  const handleCandidateSelection = (candidate: string) => {\n    if (selectedCandidates.indexOf(candidate) === -1) {\n      filterType === 'HEADTOHEAD' ? setSelectedCandidates([selectedCandidates.pop(), candidate]) :  setSelectedCandidates([candidate])\n    } else {\n      const selectedCandidatesWithoutCandidate = selectedCandidates.filter(selectedCandidate => { return selectedCandidate !== candidate })\n      setSelectedCandidates(selectedCandidatesWithoutCandidate)\n    }\n  }\n\n  const candidateSet = Object.keys(candidateTotals || {});\n  const candidates = candidateSet.sort((a, b) => {\n    return candidateTotals[a] > candidateTotals[b] ? -1 : 1;\n  });\n  const roundTotals = candidateTotals.TOTAL;\n  debugger;\n  return (\n    <div className=\"panelContainer\">\n      <h1 id=\"touchPad\">{precinctStats || 'Nov 3rd 2020 San Francisco Primary'}</h1>\n      <div className=\"panelContent\">\n\n        {children}\n        <SocialSubmitForm showSocialBar={showSocialBar} />\n\n        <label className=\"map__filter-label map__filter-label--race\" htmlFor=\"campaign-dropdown\">Race:</label>\n        <select value={selectedContest} onChange={e => { debugger; setSelectedContest(e.currentTarget.value) }} id=\"campaign-dropdown\">\n          {contests.map((contest, idx) => <option key={idx} value={idx}>{contest}</option>)}\n        </select>\n\n        <label className=\"map__filter-label map__filter-label--map-type\" htmlFor=\"map-type\">Map Type:</label>\n        <div id=\"map-type\" className=\"toggle\">\n          {MAP_TYPE.map((map, index) => {\n            const { value, copy, id } = map\n            let labelClass = ''\n\n            if (index === 0) { //TODO: Ruth figure out how to do this in a less hacky way\n              labelClass = 'toggle__label-first'\n            } else if (index === MAP_TYPE.length - 1) {\n              labelClass = 'toggle__label-last'\n            }\n\n            return (\n              <Fragment key={value}>\n                <input onChange={handleMapTypeChange} checked={value === mapType} type=\"radio\" value={value} id={id} name=\"map-type\" />\n                <label className={labelClass} htmlFor={id}>{copy}</label>\n              </Fragment>\n            )\n          })}\n        </div>\n\n        {isEligibleForFilter(mapType) &&\n        <div id=\"filter-type\" className=\"toggle filter__sub-type\">\n          <input onChange={handleFilterTypeChange} checked={'INDIVIDUAL' === filterType} type=\"radio\" value='INDIVIDUAL' id=\"filter-type-individual\" name=\"filter-type\" />\n          <label className='toggle__label-first' htmlFor=\"filter-type-individual\">Individual<span>Pick One</span></label>\n          <input onChange={handleFilterTypeChange} checked={'HEADTOHEAD' === filterType} type=\"radio\" value='HEADTOHEAD' id='filter-type-head-to-head' name=\"filter-type\" />\n          <label className='toggle__label-last' htmlFor='filter-type-head-to-head'>Head to Head<span>Pick Two to Compare</span></label>\n        </div>}\n\n        {numRunoffs ? <div id=\"filter-type\" className=\"toggle\">\n          <div className=\"filter__runoff-label\">Runoff:</div>\n          {new Array(numRunoffs).fill(1).map((_,idx, arr) => {\n            return (<Fragment key={idx}>\n              <input onChange={() => setActiveRunoff(idx)} checked={activeRunoff === idx} type=\"radio\" value={idx} id={`filter-runoff-${idx}`} name=\"filter-runoff\" />\n              <label className='toggle__label' htmlFor={`filter-runoff-${idx}`}>{idx + 1 === arr.length ? 'Final' : idx + 1}</label>\n            </Fragment>);\n          })}\n        </div> : undefined}\n\n        <ul className=\"tabset\">\n          <li><button className={`tab ${activeTab === 'candidates' ? 'tab--active' : ''}`} onClick={_ => scrollTo(0)}>Candidates</button></li>\n          <li><button className={`tab ${activeTab === 'turfs' ? 'tab--active' : ''}`} onClick={_ => scrollTo(100)}>Turfs</button></li>\n        </ul>\n\n        <section className=\"tabs\" onScroll={onScroll} id=\"tab-panel\">\n          <div>\n            <table className=\"map__candidates\">\n              <thead>\n                <tr><th></th><th>Place</th><th id=\"table-name\">{mapType === 'TURNOUT' ? 'Party' : 'Candidate'}</th><th>Votes</th><th>Percent</th></tr>\n              </thead>\n              <tbody id=\"election-results\">\n                {candidates.map((c, i) => {\n                  if (c === 'TOTAL' || c.length === 1) {\n                    return null;\n                  }\n                  const percent = ((candidateTotals[c] || 0) / (roundTotals || 0) * 100);\n                  // const prevValue = (activeRunoff > 0 && candidateTotals[activeRunoff - 1]?.[c]) ? candidateTotals[activeRunoff - 1][c] : 0;\n                  const currentValue = candidateTotals[c];\n                  return (\n                    <tr key={i} className={`${(i === numSeats) ? 'final-seat' : ''} ${' ' /*(currentValue - prevValue) === 0 ? 'table__cut' : ''*/}`} onClick={() => handleCandidateSelection(c)}>\n                      <td><Checkbox checked={selectedCandidates.indexOf(c) > -1} onChange={() => handleCandidateSelection(c)} /></td>\n                      <td>{i}</td>\n                      <td id=\"table-name\">{NAME_MAP[c] || c}</td>\n                      <td>\n                        {numberWithCommas(currentValue)}\n                        {/* <span className=\"table__increase\">{(prevValue && currentValue && currentValue - prevValue) ? ` +${currentValue - prevValue}` : ''}</span> */}\n                      </td>\n                      <td>{(isNaN(percent) ? '0' : percent.toFixed(2)) + '%'}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <div>\n            <label className=\"map__filter-label\" htmlFor=\"campaign-dropdown\">Assembly District</label>\n            <div className=\"wrap\">\n              {ASSEMBLY_DISTRICTS.map(n => <ToggleButton state={assemblyDistricts} stateSetter={setAssemblyDistricts} value={n.value} name={n.name} key={n.name} />)}\n            </div>\n            <label className=\"map__filter-label\" htmlFor=\"campaign-dropdown\">Supervisor District</label>\n            <div className=\"wrap\">\n              {SUPERVISOR_DISTRICTS.map(n => <ToggleButton state={supervisorDistricts} stateSetter={setSupervisorDistricts} name={n.name} value={n.value} key={n.name} />)}\n            </div>\n            <label className=\"map__filter-label\" htmlFor=\"campaign-dropdown\">Neighborhoods</label>\n            <div className=\"wrap\">\n              {Array.from(neighborhoods).map(n => <ToggleButton state={selectedNeighborhoods} stateSetter={setSelectedNeighborhoods} value={n} name={n} key={n} />)}\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\nexport default Panel;\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport Map from './Map/Map';\nimport Panel from './Panel/Panel';\nimport logo from './images/universe.svg';\nimport { MapType, ensureMapType } from './types';\n\nconst RACE_NAME = `November 3rd 2020 San Francisco`;\n\n\nfunction getSearchParam(regexp: RegExp) {\n  return ((regexp.exec(window.location.search) || [])[1] || '').split(',').map(decodeURIComponent).filter(Boolean);\n}\n\nfunction numberWithCommas(x: number) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst App = () => {\n  const [data, setData] = useState<any>({}); // todo: fix type\n  const [precinctMeta, setPrecinctMeta] = useState<any>({}); // todo: fix type\n  const contests: string[] = Object.keys(data || {}).slice(1);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  // Ensure we have all neighborhoods preserved.\n  const neighborhoods: Set<string> = new Set();\n  for (const precinct of Object.values(precinctMeta || {})) {\n    neighborhoods.add((precinct as any).doeNeighborhood);\n  }\n\n  useEffect(() => {\n    (async () => {\n      // setData(await (await fetch(`https://elections.universe.app/data.json?q=${Math.floor(Math.random() * 10000000)}`)).json());\n      setData(await (await fetch(`./data.json?q=${Math.floor(Math.random() * 10000000)}`)).json());\n      setPrecinctMeta(await (await fetch('./precincts.json')).json());\n      setIsLoading(false)\n    })()\n  }, []);\n\n  const [contestIdx, setSelectedContest] = useState<number>(parseInt(getSearchParam(/e=(\\d+)/gi)[0]));\n  const [mapType, setMapType] = useState<MapType>(ensureMapType(getSearchParam(/t=([^&]+)/gi)[0]));\n  const [filterType, setFilterType] = useState(((/f=([^&]+)/gi).exec(window.location.search) || [])[0] || 'INDIVIDUAL');\n  const [assemblyDistricts, setAssemblyDistricts] = useState<Array<string>>(getSearchParam(/a=([^&]+)/gi));\n  const [supervisorDistricts, setSupervisorDistricts] = useState<Array<string>>(getSearchParam(/s=([^&]+)/gi));\n  const [selectedNeighborhoods, setSelectedNeighborhoods] = useState<Array<string>>(getSearchParam(/n=([^&]+)/gi));\n  const [activePct, setActivePct] = useState<string | null>(null);\n  const [activeRunoff, setActiveRunoff] = useState<number>(0);\n  const [selectedCandidates, setSelectedCandidates] = useState<Array<string>>(getSearchParam(/c=([^&]+)/gi));\n\n  const selectedContest = contests[contestIdx];\n  useEffect(() => {\n    if (!data || isLoading) { return; }\n    if (!selectedContest) {\n      setSelectedContest(0);\n    }\n    else {\n      setActiveRunoff(Math.max(0, (data[selectedContest].__META__.ranks || 0) - 1));\n    }\n  }, [isLoading, data, selectedContest]);\n\n  const candidateTotals: { [key: string]: {} } = {};\n  const values: number[] = [];\n  const heat: { [key: string]: {[key: string]: any } } = {};\n  const contestData = data?.[selectedContest] || {};\n  const partyRegistration: { [key: string]: {} } = {};\n  const PCTSHEAT: { [key: string]: {} } = {};\n  const candidateSet = new Set<string>();\n\n  let registration = 0;\n  let totalVotes = 0;\n  let candidates = selectedCandidates;\n\n  if (data && precinctMeta) {\n    if (activePct) { contestData[activePct] = contestData[activePct] || { turnout: {}, 0: {} }; }\n    for (let pctName of [...new Set([...Object.keys(contestData), ...Object.keys(precinctMeta)])]) {\n      if (pctName === '__META__') { continue; }\n\n      if (activePct && pctName !== activePct) { continue; }\n\n      contestData[pctName] = contestData[pctName] || { turnout: {}, 0: {} };\n\n      if (selectedNeighborhoods.length > 0 && !selectedNeighborhoods.includes(precinctMeta?.[pctName]?.doeNeighborhood)) {\n        continue;\n      }\n\n      // Skip precincts outside our selected assembly districts.\n      if (assemblyDistricts.length > 0) {\n        if (!assemblyDistricts.includes('AD17') && (pctName[0] === '7') || (pctName[0] === '1' && parseInt(pctName[2]) >= 4)) {\n          continue;\n        }\n        if (!assemblyDistricts.includes('AD19') && (pctName[0] === '9') || (pctName[0] === '1' && parseInt(pctName[2]) < 4)) {\n          continue;\n        }\n      }\n\n      // Skip precincts outside our selected supervisor districts.\n      if (supervisorDistricts.length > 0) {\n        if (!supervisorDistricts.includes('SD1') && (pctName[1] === '1' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD2') && (pctName[1] === '2' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD3') && (pctName[1] === '3' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD4') && (pctName[1] === '4' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD5') && (pctName[1] === '5' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD6') && (pctName[1] === '6' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD7') && (pctName[1] === '7' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD8') && (pctName[1] === '8' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD9') && (pctName[1] === '9' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD10') && (pctName[1] === '0' && pctName[0] !== '1')) { continue; }\n        if (!supervisorDistricts.includes('SD11') && (pctName[0] === '1')) { continue; }\n      }\n\n      const pct: { [key: string]: any } = contestData[pctName];\n      let pctPcts: { [key: string]: number } = PCTSHEAT[pctName] = {};\n      let totalPctVotes = pct?.turnout?.all || 0;\n      let totalPctReg = precinctMeta[pctName] && precinctMeta[pctName]?.registration[contestData?.__META__?.party || 'all'];\n\n      // Open primaries in SF. Is this always true?\n      if (contestData?.__META__?.party !== 'all') {\n        totalPctReg += precinctMeta[pctName]?.registration['npp'] || 0;\n      }\n\n      for (const candidateName of (contestData?.__META__?.candidates || [])) {\n        pct[activeRunoff] = pct[activeRunoff] || {};\n        pct[activeRunoff][candidateName] = pct[activeRunoff][candidateName] || 0;\n      }\n\n      if (filterType === 'INDIVIDUAL') {\n        totalVotes += totalPctVotes;\n        registration += totalPctReg || 0;\n      }\n\n      if (mapType === 'TURNOUT') {\n        candidateTotals.TOTAL = (candidateTotals.TOTAL || 0) + (totalPctReg || 0);\n        for (let party of Object.keys(pct?.turnout || {})) {\n          if (party === 'all') { continue }\n          candidateSet.add(party);\n          pctPcts[party] = (pct?.turnout[party] || 0) / (precinctMeta[pctName]?.registration?.[party] || 1);\n          candidateTotals[party] = (candidateTotals[party] || 0) + (pct.turnout[party] || 0);\n          partyRegistration[party] = (partyRegistration[party] || 0) + (precinctMeta[pctName]?.registration[party] || 0)\n          values.push(pctPcts[party]); // need a NaN check here\n        }\n      } else {\n        candidateTotals.TOTAL = (candidateTotals.TOTAL || 0) + (totalPctVotes || 0);\n\n        for (let candidateName of Object.keys(pct[activeRunoff] || {})) {\n          if (candidateName === 'TOTAL' || candidateName === 'turnout') { continue }\n\n          if (filterType !== 'INDIVIDUAL' && candidates.indexOf(candidateName) !== -1) {\n            totalVotes += (pct[activeRunoff][candidateName] || 0);\n            registration += (pct[activeRunoff][candidateName] || 0);\n          }\n\n          candidateSet.add(candidateName);\n          candidateTotals[candidateName] = (candidateTotals[candidateName] || 0) + (pct[activeRunoff][candidateName] || 0);\n          pctPcts[candidateName] = pct[activeRunoff][candidateName] / totalPctVotes;\n          if (mapType !== 'HOTSPOT') { values.push(pctPcts[candidateName]); }\n        }\n      }\n    }\n\n    candidates = selectedCandidates.length && candidateSet.has(selectedCandidates[0]) ? selectedCandidates : [[...candidateSet].sort((a, b) => {\n      return candidateTotals[a] > candidateTotals[b] ? -1 : 1;\n    })[0]].filter(Boolean);\n\n    if (!isLoading) {\n      !selectedCandidates.length && candidates[0] && setSelectedCandidates([candidates[0]]);\n\n      if (mapType !== 'SUPPORT' && mapType !== 'WINLOSE' && filterType === 'HEADTOHEAD') {\n        setFilterType('INDIVIDUAL');\n        setSelectedCandidates([selectedCandidates[0]]);\n      }\n\n      else if (mapType !== 'TURNOUT' && selectedContest && selectedCandidates.length && data[selectedContest]?.__META__?.candidates?.indexOf(selectedCandidates[0]) === -1) {\n        setSelectedCandidates([]);\n      }\n\n      const qsCon = contests.indexOf(selectedContest) ? `e=${contests.indexOf(selectedContest)}` : '';\n      const qsCan = selectedCandidates.length > 0 && Object.getOwnPropertyNames(candidateTotals).indexOf(selectedCandidates[0]) > -1 ? `c=${[...candidates].join(',')}` : '';\n      const qsSup = supervisorDistricts.length ? `s=${[...supervisorDistricts].join(',')}` : '';\n      const qsAss = assemblyDistricts.length ? `a=${[...assemblyDistricts].join(',')}` : '';\n      const qsNei = selectedNeighborhoods.length ? `n=${[...selectedNeighborhoods].join(',')}` : '';\n      const qsTyp = mapType === 'SUPPORT' ? null : `t=${mapType}`;\n      const qsFTyp = filterType === 'INDIVIDUAL' ? null : `f=${filterType}`\n      const params =  [qsTyp, qsFTyp, qsCon, qsCan, qsSup, qsAss, qsNei].filter(Boolean).join('&');\n      const url = `${window.location.pathname}${params ? '?' : ''}${params}`;\n      window.history.replaceState({}, '', url);\n    }\n\n    for (let pctName of Object.keys(contestData)) {\n      for(let candidate of candidates){\n        if (pctName === '__META__') { continue; }\n        let pctPcts: { [key: string]: number } = PCTSHEAT[pctName];\n        if (!pctPcts) { continue; }\n        const vals = Object.values(pctPcts).filter((n) => typeof n === 'number' && !isNaN(n)).filter(Boolean) as number[];\n        const winners = new Set(vals.sort().slice(contestData.__META__.seats * -1));\n        heat[pctName] = [pctPcts[candidate], Math.min(...vals), Math.max(...vals), winners.has(pctPcts[candidate])];\n        !isNaN(pctPcts[candidate]) && values.push(pctPcts[candidate]);\n      }\n    }\n  }\n\n  let precinctStats = `${numberWithCommas(totalVotes)}/${numberWithCommas(registration)} (${((totalVotes / (registration || 1)) * 100).toFixed(2)}%) turnout`;\n  if (activePct) {\n    precinctStats = `PCT ${activePct}: ${precinctStats}`;\n  }\n  if (activePct && contestData[activePct] && heat && heat[activePct]) {\n    if (mapType === 'TURNOUT') {\n      for(let selectedCandidate of selectedCandidates){\n        console.log(contestData[activePct].turnout, precinctMeta[activePct].registration, selectedCandidate)\n        precinctStats = `PCT ${activePct}: ${contestData[activePct].turnout[selectedCandidate] || 0}/${precinctMeta[activePct].registration[selectedCandidate] || 0} (${((heat[activePct][0] || 0) * 100).toFixed(2) + '%'})`;\n      }\n    }\n    else if (filterType !== 'INDIVIDUAL') {\n      let totalVote = 0;\n      for(let selectedCandidate of selectedCandidates) {\n        totalVote += contestData[activePct][activeRunoff][selectedCandidate];\n      }\n      precinctStats = `PCT ${activePct}: ${contestData[activePct][activeRunoff][selectedCandidates[0]] || 0} vs ${contestData[activePct][activeRunoff][selectedCandidates[1]] || 0}`;\n    }\n    else {\n      for(let selectedCandidate of selectedCandidates){\n        precinctStats = `PCT ${activePct}: ${contestData[activePct][activeRunoff][selectedCandidate] || 0}/${precinctMeta[activePct].registration.all || 0} (${((heat[activePct][0] || 0) * 100).toFixed(2) + '%'})`;\n      }\n    }\n  }\n\n  return (\n    <div id=\"main\">\n      <h1 className=\"title\">{RACE_NAME}</h1>\n      <a href=\"https://universe.app\"><img src={logo} alt=\"Universe Logo\" className=\"logo\" /></a>\n      <Map\n        selectedCandidates={candidates}\n        contestData={contestData}\n        mapType={mapType}\n        HEAT={heat}\n        precinctMeta={precinctMeta}\n        values={values}\n        setPrecinctStats={setActivePct}\n        precinct={activePct}\n      />\n      <div className=\"padding\" />\n      <Panel\n        contests={contests}\n        neighborhoods={neighborhoods}\n        mapType={mapType}\n        setMapType={setMapType}\n        assemblyDistricts={assemblyDistricts}\n        setAssemblyDistricts={setAssemblyDistricts}\n        supervisorDistricts={supervisorDistricts}\n        setSupervisorDistricts={setSupervisorDistricts}\n        selectedNeighborhoods={selectedNeighborhoods}\n        setSelectedNeighborhoods={setSelectedNeighborhoods}\n        selectedContest={contestIdx}\n        setSelectedContest={setSelectedContest}\n        candidateTotals={candidateTotals}\n        selectedCandidates={candidates}\n        setSelectedCandidates={setSelectedCandidates}\n        registration={registration}\n        totalVotes={totalVotes}\n        precinctStats={precinctStats}\n        filterType={filterType}\n        setFilterType={setFilterType}\n        numSeats={(selectedContest && data[selectedContest]?.__META__?.seats) || 1}\n        numRunoffs={(selectedContest && data[selectedContest]?.__META__?.ranks) || 0}\n        activeRunoff={activeRunoff}\n        setActiveRunoff={setActiveRunoff}\n      >\n        <h1 className=\"title\">{RACE_NAME}</h1>\n      </Panel>\n    </div>\n  );\n}\n\nexport default App;\n","export type MapType = 'SUPPORT' | 'HOTSPOT' | 'WINLOSE' | 'TURNOUT';\n\nexport function ensureMapType(type?: string): MapType {\n  type = type?.toUpperCase();\n  if (type !== 'SUPPORT' && type !== 'HOTSPOT' && type !== 'WINLOSE' && type !== 'TURNOUT'){\n    return 'SUPPORT';\n  }\n  return type;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}